Логичка парадигма
=================

Логичка парадигма је једна од кључних програмских парадигми која се
фокусира на решавање проблема путем формалне логике и закључивања. Ова
парадигма се темељи на идеји да се програмирање може извршити
дефинисањем чињеница и правила закључивања, а рачунар ће аутоматски
извести одговарајуће закључке. Логичка парадигма се често користи за
решавање проблема који укључују закључивање, претрагу и анализу.

У логичкој парадигми, програми се изражавају као скупови логичких
израза који описују односе између различитих ентитета. Централни
концепт у овој парадигми је су правила закључивања која дефинишу како
се програм треба понашати у одређеним ситуацијама. Ови логички изрази
се често пишу користећи формални језик логике, као што је *Prolog*.

У логичкој парадигми, програмер се фокусира на дефинисање чињеница и
правила, уместо на детаље извршавања. Ово олакшава изражавање сложених
релација и проблема и доприноси *декларативности* процеса
програмирања. Рачунар *аутоматски изводи закључке* на основу
дефинисаних правила. Ово омогућава решавање проблема закључивања и
претраге на ефикасан начин. Логичка парадигма је корисна за решавање
сложених проблема који укључују претрагу, анализу и апстрактне
концепте. Примери укључују веб претрагу, вештачку интелигенцију и базу
знања. Логичка парадигма се најчешће употребљавала за изградњу
тзв. *експертских система*, где се формално изражавају знање и правила
стручњака. Ако се промене захтеви или услови проблема, логички
програми се често могу лако ажурирати променом чињеница и правила, без
потребе за дубоким променама у коду.

Међутим, логичка парадигма може бити ограничена у ефикасности и
скалабилности за одређене врсте проблема, као што су проблеми који
захтевају велику рачунарску снагу или брзу извршавање.
