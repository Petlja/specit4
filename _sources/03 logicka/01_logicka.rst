Логичка парадигма
=================

Основни појам логике је **исказ**. То је тврдња која може бити тачна
или нетачна. На пример, *"Београд је главни град Републике Србије"* је
тачан исказ, а *"7 је паран број"* је нетачан исказ.

.. infonote::
   
   У реалности постоје и тврдње које могу бити истините у некој мери,
   попут исказа *"напољу је данас топло"* који зависи од субјективног
   осећања, контекста (доба године) и слично. Ми се нећемо бавити
   таквом оценом већ ћемо разматрати само класичну логику у којој је
   сваки исказ или потпуно тачан или потпуно нетачан.

Исказе повезујемо логичким везницима.

На пример, исказ *"број 6 није прост"* је **негација** (**логичко
не**) исказа *"број 6 је прост"*, пошто је други исказ нетачан, први
исказ је тачан. Негацију исказа :math:`p` означавамо са :math:`\neg p`
и њена истинитосна вредност је супротна од истинитосне вредности
полазног исказа.

.. math::

   \begin{array}{|c||c|}
   \hline
   p & \neg p \\
   \hline
   0 & 1 \\
   1 & 0 \\
   \hline
   \end{array}


Исказ *"7 је непаран прост број"* у себи крије **конјункцију**
(**логичко "и"**) исказа "7 је непаран број" и "7 је прост број". Сва
три исказа су тачна. Конјункција исказа је тачна ако и само ако су
тачна оба исказа.

Конјункција исказа :math:`p` и :math:`q` обележава се са :math:`p
\wedge q`. Истинитосна вредност тог исказа у зависности од истинитосне
вредности исказа :math:`p` и истиитосне вредности исказа :math:`q`
одређена је следећом таблицом (0 означава да је исказ нетачан, а 1 да
је тачан).

.. math::

   \begin{array}{|c|c||c|}
   \hline
   p & q & p \wedge q \\
   \hline
   0 & 0 & 0 \\
   0 & 1 & 0 \\
   1 & 0 & 0 \\
   1 & 1 & 1 \\
   \hline
   \end{array}

Купац добија попуст ако је тачан исказ *"купац је премијум купац или
му је рачун већи од 2000 динара"*. Тај исказ је **дисјункција**
(**логичко "или"**) исказа "Купац је премијум купац" и исказа "рачун
је већи од 2000 динара". Дисјункција је тачна када је било који од та
два исказа тачан. Могуће је да се деси и да су оба исказа тачна и
њихова дисјункција ће бити тачна (ако премијум купац направи рачун
већи од 1000 динара, исказ ће бити тачан и он ће добити попуст). Таква
дисјункција се назива **инклузивна дисјункција**. У математици се
подразумева да је дискункција инклузивна осим ако се другачије не
нагласи.

.. math::

   \begin{array}{|c|c||c|}
   \hline
   p & q & p \vee q \\
   \hline
   0 & 0 & 0 \\
   0 & 1 & 1 \\
   1 & 0 & 1 \\
   1 & 1 & 1 \\
   \hline
   \end{array}


Постоји и **ексклузивна дисјункција** која је тачна када је
тачно један од два исказа тачна. На пример, *"ићи ћу у посластичарницу
или ако имам пуно пара или ако сам пуно гладан"* може бити пример
ексклузивне дисјункције која је нетачна ако су оба услова испуњена
(јер неко може да се боји да ће се пуно угојити ако са пуно пара оде у
посластичарницу). Екслузивност дисјункције обично у говорном језику
наглашавамо коришћењем везника "или-или".

.. math::

   \begin{array}{|c|c||c|}
   \hline
   p & q & p \underline{\vee} q \\
   \hline
   0 & 0 & 0 \\
   0 & 1 & 1 \\
   1 & 0 & 1 \\
   1 & 1 & 0 \\
   \hline
   \end{array}


Размотримо исказ "ако будеш учио, добићеш добру оцену". Ово је пример
**импликације** (**ако-онда**). Размислимо када је овај исказ тачан
тј. када наставник говори истину, а када лаже.

- Ако је ученик учио и добио добру оцену, наставник је рекао
  истину.
- Ако је ученик учио, а наставник му није дао добру оцену, јасно је да
  је наставник слагао.
- Ако ученик није учио и није добио добру оцену, поново је јасно да
  наставник није ништа слагао.
- Донекле збуњујућ случај је ако ученик није учио, а наставник му ипак
  да добру оцену. Ни у овом случају не можемо рећи да је наставник
  лагао (можемо рећи да поклања оцене). Наиме, наставник у својој
  реченици није рекао ништа о томе шта ће се десити ако ученик не буде
  учио, па какву год оцену да му да, наставник није слагао ученика.
  
Дакле импликација је нетачна једино када је претпоставка испуњена а
закључак није (ученик јесте учио, а наставник му није дао добру
оцену). Импликација је тачна у свим осталим случајевима. Ако
претпоставка није испуњена, импликација је тачна (ако ученик не учи,
наставник не може да испадне лажов). Такође, ако је закључак тачан,
импликација је тачна (ако ученику да добру оцену наставник не може да
испадне лажов).
  
.. math::

   \begin{array}{|c|c||c|}
   \hline
   p & q & p \Rightarrow q \\
   \hline
   0 & 0 & 1 \\
   0 & 1 & 1 \\
   1 & 0 & 0 \\
   1 & 1 & 1 \\
   \hline
   \end{array}

Честа забуна је да људи мешају импликацију и **еквиваленцију**
тј. исказ "ако будеш учио, добићеш добру оцену" схватају као исказ
"добићеш добру цену ако и само ако будеш учио", што између осталог
значи да ако ученик не буде учио он сигурно неће добити добру
оцену. Еквиваленција је тачна једино када два исказа имају исту
истинитосну вредност (или су оба нетачна или су оба тачна).

.. math::

   \begin{array}{|c|c||c|}
   \hline
   p & q & p \Leftrightarrow q \\
   \hline
   0 & 0 & 1 \\
   0 & 1 & 0 \\
   1 & 0 & 0 \\
   1 & 1 & 1 \\
   \hline
   \end{array}

Применом ових логичких везника кренувши од елементарних исказа и
евентуално логичких константи :math:`\top` и :math:`\bot` градимо
сложене исказе тј.  **исказне формуле**.
   
Неки сложени искази су тачни без обзира на истинитосну вредност
полазних исказа од којих су изграђени. Такве формуле се називају
**таутологије**. На пример, формула :math:`\neg (p \wedge q)
\Leftrightarrow \neg p \vee \neg q` је тачна без обзира на то да ли су
:math:`p` и :math:`q` тачни.

      
.. math::

   \begin{array}{|c|c||c|}
   \hline
   p & q & \neg (p \wedge q) \Leftrightarrow \neg p \vee \neg q\\
   \hline
   0 & 0 & 1 \\
   0 & 1 & 1 \\
   1 & 0 & 1 \\
   1 & 1 & 1 \\
   \hline
   \end{array}

Доделу истинитосних вредности променљивих називамо **валуација** (на
пример, другом реду у претходној табели одговара валуација
:math:`p\mapsto 0, q\mapsto 1`). Таутологије су формуле које су тачне
у свим валуацијама. Негације таутологија су **незадовољиве**
тј. нетачне у свим валуацијама. Формуле које су тачне бар у једној
валуацији називамо **задовољиве формуле** а формуле које нису
таутлогије, тј. које су нетачне бар у једној валуацији називамо
**порециве формуле**.

Испитивање коректности закључивања се може свести на испитивање
таутологичности неких формула. На пример, претпоставимо да знамо да су
искази *Ако је Цеца победила онда је Марија била друга или је Сандра
била трећа""* и *"Сандра није била рећа"* тачни. Да ли је исправно из
њих закључити да је исказ "Ако Марија није била друга, онда Цеца није
победила"? Желимо да проверимо да ли је трећи исказ **логичка
последица** прва два тј. да ли је трећи исказ тачан у свим валуацијама
у којима су прва два тачна. Да би се то проверило довољно је проверити
да је формула :math:`I_1 \wedge I_2 \Rightarrow I_3` таутологија. Ако
са :math:`p` означимо исказ *"Цеца је победила"*, са :math:`q` исказ
"Марија је била друга" и са :math:`r` исказ *"Сандра је била трећа"*,
добијамо формулу:

.. math::

   (p \Rightarrow q \vee r) \wedge (\neg r) \Rightarrow (\neg q \Rightarrow \neg p)

Ова формула јесте таутологија.

Испитивање таутологичности (али и задовољивости, незадовољивости и
порецивости) формула може се извршити испитивањем свих валуација
тј. прављењем истинитосне таблице. Проблем је то што је тај метод
веома неефикасан. Наиме, за :math:`n` исказних променљивих таблица има
:math:`2^n` врста, па већ формуле од педесетак променљивих није могуће
обрадити на овакав начин. Ипак, постоји веома ефикасан софтвер који
може да испита задовољивост исказне формуле. Такви програми се
називају **SAT решавачи** (енгл. SAT solver). Иако они испитују само
задовољивост формуле, могу се лако употребити да провере и
таутологичност. Наиме, решавач треба да провери задовољивост негације
формуле, па ако утврди да је негација незадовољива, полазна формула је
таутологија. Савремени SAT решавачи могу да провере неке формуле са
стотинама хиљада променљивих. Међутим, да би се могли користити
формула мора бити припремљена на одговарајући начин. Потребно је
превести формулу у тзв. **конјунктивну нормалну форму (КНФ)**
тј. представити је у облику конјункције клауза, где је свака клауза
дисјункција литерала, а литерал је исказно слово или негација исказног
слова.

КНФ облик негације формуле из претходног примера је:

.. math::

   (\neg p \vee q \vee r) \wedge \neg r \wedge \neg q \wedge p

Заиста, негација претходне формуле еквивалентна је формули


.. math::

   (p \Rightarrow q \vee r) \wedge \neg r \wedge \neg (\neg q \Rightarrow \neg p)

Овде смо употребили чињеницу да су :math:`\neg (A \Rightarrow B)` и
:math:`A \wedge \neg B` еквивалентне што се лако може утврдити
провером таутологичности формуле :math:`\neg (A \Rightarrow B)
\Leftrightarrow A \wedge \neg B`. На основу истог правила претходна
формула се може свести на:

.. math::

   (p \Rightarrow q \vee r) \wedge \neg r \wedge (\neg q \wedge \neg \neg p)

Сада можемо употребити чињеницу да су :math:`A \Rightarrow B` и
:math:`\neg A \vee B` еквивалентне, што се може лако утврдити
испитивањем таутологичности формуле :math:`(A \Rightarrow B) \Leftrightarrow (\neg A \vee B)` и добити:


.. math::

   (\neg p \vee (q \vee r)) \wedge \neg r \wedge (\neg q \wedge \neg \neg p)

На крају, применом чињенице да су :math:`\neg \neg A` и :math:`A`
еквивалентне и применом закона асоцијативности за конјункцију и
дисјунцкију (који нам омогућавају да неке заграде изоставимо) добијамо
КНФ облик:

.. math::

   (\neg p \vee q \vee r) \wedge \neg r \wedge \neg q \wedge p
